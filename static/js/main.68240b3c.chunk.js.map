{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","colortheme","name","value","defaultChecked","htmlFor","togglemode","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","onChange","event","target","style","backgroundColor","color","rows","newtext","toUpperCase","showAlert","toLocaleLowerCase","navigator","clipboard","writeText","split","length","defaultProps","about","alerts","alert","role","word","lower","toLowerCase","charAt","slice","Capitalize","msg","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","_useState5","_useState6","setcolor","document","body","COLOR","Alerts","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.68240b3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\"> */}\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n            {/* </li> */}\r\n          </ul>\r\n          <div className={`form-check form-check-inline text-${props.mode === 'light' ? 'black' : 'primary'} `}>\r\n            <input className=\"form-check-input\" type=\"radio\"  onClick={()=>props.colortheme('primary')} name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\" defaultChecked />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Blue</label>\r\n          </div>\r\n          <div className={`form-check form-check-inline  text-${props.mode === 'light' ? 'black' : 'success'} `}>\r\n            <input className=\"form-check-input\" type=\"radio\" onClick={()=>props.colortheme('success')} name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Green</label>\r\n          </div>\r\n          <div className={`form-check form-check-inline  text-${props.mode === 'light' ? 'black' : 'warning'} `}>\r\n            <input className=\"form-check-input\" type=\"radio\" onClick={()=>props.colortheme('warning')} name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Yellow</label>\r\n          </div>\r\n          \r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'black' : 'white'} `}>\r\n            <input type=\"checkbox\" className=\"form-check-input\" onClick={props.togglemode} id=\"customSwitch1\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n\r\n  \r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  about: \"About Us Txt here\"\r\n}","import React, { useState } from \"react\";\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n  \r\n  const changetouprcase = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted To UpperCase!\",\"success\");\r\n  };\r\n  \r\n  const changetolwrcase = () => {\r\n    let newtext = text.toLocaleLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted To LowerCase!\",\"success\");\r\n\r\n  };\r\n\r\n  const clear = () => {\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    props.showAlert(\"Text Cleared!\",\"success\");\r\n\r\n  };\r\n  \r\n  const copy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied To Clipboard!\",\"success\");\r\n\r\n  };\r\n  const writtentxt = (event) => {\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h2 className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n          {props.heading}\r\n        </h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={writtentxt}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#7c7f8d\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            id=\"textarea\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        <button className={`btn btn-${props.color} mx-1`} onClick={changetouprcase}>\r\n          Convert To Uppercase\r\n        </button>\r\n        <button className={`btn btn-${props.color} mx-1`} onClick={changetolwrcase}>\r\n          Convert To Lowercase\r\n        </button>\r\n        <button className={`btn btn-${props.color} mx-1`} onClick={clear}>\r\n          Clear\r\n        </button>\r\n        <button className={`btn btn-${props.color} mx-1`} onClick={copy}>\r\n          Copy to ClipBoard\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={`container my-5 text-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        }`}\r\n      >\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words {text.length} characters\r\n        </p>\r\n        <p>{0.006 * text.split(\" \").length} Minutes Read</p>\r\n      </div>\r\n      <div\r\n        className={`container my-5 text-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        }`}\r\n      >\r\n        <h2>Preview Text </h2>\r\n        <p>{text.length>0 ?text:\"Type Something Above To Preview it Here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction alerts(props) {\r\n    const Capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return  lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong> {Capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                         </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default alerts","\nimport React,{ useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport Alerts from './components/Alerts'\n// import About from './components/About'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    }\n    )\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      showAlert(\"Dark mode enabled\", \"success\");\n      if (color === 'primary') {\n        document.body.style.backgroundColor = 'rgb(0 52 72)';\n      }\n      if (color === 'success') {\n        document.body.style.backgroundColor = 'rgb(24 54 43)';\n      }\n      if (color === 'warning') {\n        document.body.style.backgroundColor = 'rgb(78 60 10)';\n      }\n\n    }\n    else {\n      setmode('light');\n\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\", \"success\");\n\n    }\n  }\n  const [color, setcolor] = useState('primary')\n  const changecolor = (COLOR) => {\n    setcolor(COLOR);\n    if (mode === 'dark' && COLOR === 'primary') {\n      document.body.style.backgroundColor = 'rgb(0 52 72)';\n    }\n    if (mode === 'dark' && COLOR === 'success') {\n      document.body.style.backgroundColor = 'rgb(24 54 43)';\n    }\n    if (mode === 'dark' && COLOR === 'warning') {\n      document.body.style.backgroundColor = 'rgb(78 60 10)';\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode} colortheme={changecolor} about=\"About TextUtils\"/>\n        <Alerts alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm heading=\"Enter the text to analyse\" showAlert={showAlert} mode={mode} color={color} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}